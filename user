warning: in the working copy of 'prisma/schema.prisma', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/prisma/schema.prisma b/prisma/schema.prisma[m
[1mindex 5f11f0a..880d819 100644[m
[1m--- a/prisma/schema.prisma[m
[1m+++ b/prisma/schema.prisma[m
[36m@@ -2,13 +2,30 @@[m [mgenerator client {[m
   provider = "prisma-client-js"[m
 }[m
 [m
[31m-[m
 datasource db {[m
   provider = "postgresql"[m
   url      = env("DATABASE_URL")[m
 }[m
 [m
[32m+[m[32mmodel card_orders {[m
[32m+[m[32m  id_order      Int                  @id @default(autoincrement())[m
[32m+[m[32m  card_id       Int?[m
[32m+[m[32m  user_id       Int[m
[32m+[m[32m  type          card_orders_type[m
[32m+[m[32m  amount        Decimal              @db.Decimal(10, 2)[m
[32m+[m[32m  fee           Decimal              @default(0.00) @db.Decimal(10, 2)[m
[32m+[m[32m  provider_fee  Decimal?             @db.Decimal(10, 2)[m
[32m+[m[32m  status        card_orders_status   @default(PENDING)[m
[32m+[m[32m  external_ref  String?              @db.VarChar(255)[m
[32m+[m[32m  executed_at   DateTime?            @db.Timestamp(0)[m
[32m+[m[32m  created_at    DateTime             @default(now()) @db.Timestamp(0)[m
[32m+[m[32m  deleted       card_orders_deleted? @default(no)[m
[32m+[m[32m  virtual_cards virtual_cards?       @relation(fields: [card_id], references: [id_card])[m
[32m+[m[32m  users         users                @relation(fields: [user_id], references: [id_user], onDelete: Cascade)[m
 [m
[32m+[m[32m  @@index([card_id], map: "idx_card_orders_card_id")[m
[32m+[m[32m  @@index([user_id], map: "idx_card_orders_user_id")[m
[32m+[m[32m}[m
 [m
 model financialreports {[m
   id_report          Int                       @id @default(autoincrement())[m
[36m@@ -19,8 +36,6 @@[m [mmodel financialreports {[m
   total_fees         Decimal?                  @default(0.00) @db.Decimal(15, 2)[m
   generated_at       DateTime                  @default(now()) @db.Timestamp(0)[m
   deleted            financialreports_deleted? @default(no)[m
[31m-[m
[31m-  @@map("financialreports")[m
 }[m
 [m
 model notifications {[m
[36m@@ -34,86 +49,116 @@[m [mmodel notifications {[m
   users           users                  @relation(fields: [user_id], references: [id_user], onDelete: Cascade, onUpdate: Restrict, map: "notifications_ibfk_1")[m
 [m
   @@index([user_id], map: "idx_notifications_user_id")[m
[31m-  @@map("notifications")[m
 }[m
 [m
 model transactions {[m
[31m-  id_transaction    Int                  @id @default(autoincrement())[m
[31m-  user_id           Int[m
[31m-  recipient_user_id  Int?[m
[31m-  type              transactions_type[m
[31m-  amount            Decimal               @db.Decimal(10, 2)[m
[31m-  fees              Decimal?              @db.Decimal(10, 2)   // <-- nouveau champ frais[m
[31m-  status            transactions_status? @default(pending)[m
[31m-  note              String?[m
[31m-  initiated_at      DateTime              @default(now()) @db.Timestamp(0)[m
[31m-  completed_at      DateTime              @default(now()) @db.Timestamp(0)[m
[31m-  deleted           transactions_deleted? @default(no)[m
[31m-[m
[31m-  users             users    @relation("UserSender", fields: [user_id], references: [id_user], onDelete: Cascade)[m
[31m-  recipient         users?   @relation("TransactionRecipient", fields: [recipient_user_id], references: [id_user])[m
[32m+[m[32m  id_transaction                              Int                   @id @default(autoincrement())[m
[32m+[m[32m  user_id                                     Int[m
[32m+[m[32m  type                                        transactions_type[m
[32m+[m[32m  amount                                      Decimal               @db.Decimal(10, 2)[m
[32m+[m[32m  status                                      transactions_status?  @default(pending)[m
[32m+[m[32m  initiated_at                                DateTime              @default(now()) @db.Timestamp(0)[m
[32m+[m[32m  completed_at                                DateTime              @default(now()) @db.Timestamp(0)[m
[32m+[m[32m  deleted                                     String? @default("no")[m
[32m+[m[32m  recipient_user_id                           Int?[m
[32m+[m[32m  note                                        String?[m
[32m+[m[32m  fees                                        Decimal?              @db.Decimal(10, 2)[m
[32m+[m[32m  users_transactions_recipient_user_idTousers users?                @relation("transactions_recipient_user_idTousers", fields: [recipient_user_id], references: [id_user])[m
[32m+[m[32m  users_transactions_user_idTousers           users                 @relation("transactions_user_idTousers", fields: [user_id], references: [id_user], onDelete: Cascade)[m
 [m
[31m-  @@index([user_id])[m
   @@index([recipient_user_id])[m
[32m+[m[32m  @@index([user_id])[m
 }[m
 [m
[31m-model users {[m
[31m-  id_user           Int                 @id @default(autoincrement())[m
[31m-  username          String              @unique @db.VarChar(255)[m
[31m-  email             String              @unique @db.VarChar(255)[m
[31m-  phone             String              @unique @db.VarChar(20) @default("")[m
[31m-  password          String              @db.VarChar(255)[m
[31m-  role              users_role          @default(user)[m
[31m-  balance           Decimal             @default(0) @db.Decimal(15, 2)[m
[31m-  is_verified       Boolean             @default(false)[m
[31m-  refresh_token     String?             @db.VarChar(255)[m
[31m-  created_at        DateTime            @default(now()) @db.Timestamp(0)[m
[31m-  updated_at        DateTime            @default(now()) @db.Timestamp(0)[m
[31m-  deleted           users_deleted?      @default(no)[m
[31m-[m
[31m-  notifications        notifications[][m
[31m-  transactions         transactions[]  @relation("UserSender")[m
[31m-  receivedTransactions transactions[]  @relation("TransactionRecipient") [m
[31m-[m
[31m-  userprofiles          userprofiles[][m
[31m-  userverifications     userverifications[][m
[31m-  virtual_cards         virtual_cards[]  [m
[31m-  card_orders           card_orders[]  [m
[31m-[m
[31m-  @@map("users")[m
[32m+[m[32mmodel userprofiles {[m
[32m+[m[32m  id_profile    Int                   @id @default(autoincrement())[m
[32m+[m[32m  user_id       Int[m
[32m+[m[32m  full_name     String?               @db.VarChar(255)[m
[32m+[m[32m  phone_number  String?               @db.VarChar(20)[m
[32m+[m[32m  address       String?[m
[32m+[m[32m  date_of_birth DateTime?             @db.Date[m
[32m+[m[32m  created_at    DateTime              @default(now()) @db.Timestamp(0)[m
[32m+[m[32m  updated_at    DateTime              @default(now()) @db.Timestamp(0)[m
[32m+[m[32m  deleted       userprofiles_deleted? @default(no)[m
[32m+[m[32m  users         users                 @relation(fields: [user_id], references: [id_user], onDelete: Cascade)[m
 }[m
 [m
[32m+[m[32mmodel users {[m
[32m+[m[32m  id_user                  Int          @id @default(autoincrement())[m
[32m+[m[32m  email                    String?      @unique[m
[32m+[m[32m  phone                    String?      @unique[m
[32m+[m[32m  username                 String?      @unique[m
[32m+[m[32m  password                 String[m
[32m+[m[32m  role                     String       @default("Client")[m
[32m+[m[32m  deleted                  String       @default("no")[m
[32m+[m[32m  created_at               DateTime     @default(now())[m
[32m+[m[32m  updated_at               DateTime     @updatedAt[m
 [m
[31m-model userprofiles {[m
[31m-  id_profile      Int                   @id @default(autoincrement())[m
[31m-  user_id         Int[m
[31m-  full_name       String?               @db.VarChar(255)[m
[31m-  phone_number    String?               @db.VarChar(20)[m
[31m-  address         String?[m
[31m-  date_of_birth   DateTime?             @db.Date[m
[31m-  created_at      DateTime              @default(now()) @db.Timestamp(0)[m
[31m-  updated_at      DateTime              @default(now()) @db.Timestamp(0)[m
[31m-  deleted         userprofiles_deleted? @default(no)[m
[31m-  users           users                 @relation(fields: [user_id], references: [id_user], onDelete: Cascade)[m
[31m-[m
[31m-  @@map("userprofiles")[m
[32m+[m[32m  // Relations[m
[32m+[m[32m  userprofiles             userprofiles[][m
[32m+[m[32m  userverifications        userverifications[][m
[32m+[m[32m  notifications            notifications[][m
[32m+[m[32m  virtual_cards            virtual_cards[][m
[32m+[m[32m  card_orders              card_orders[][m
[32m+[m
[32m+[m[32m  transactions             transactions[] @relation("transactions_user_idTousers")[m
[32m+[m
[32m+[m[32m  received_transactions    transactions[] @relation("transactions_recipient_user_idTousers")[m
 }[m
 [m
 model userverifications {[m
[31m-  id_verification Int                        @id @default(autoincrement())[m
[31m-  user_id         Int[m
[31m-  method          userverifications_method[m
[31m-  status          userverifications_status?  @default(pending)[m
[31m-  requested_at    DateTime                   @default(now()) @db.Timestamp(0)[m
[31m-  verified_at     DateTime?                  @db.Timestamp(0)[m
[31m-  deleted         userverifications_deleted? @default(no)[m
[31m-  users           users                      @relation(fields: [user_id], references: [id_user], onDelete: Cascade, onUpdate: Restrict, map: "userverifications_ibfk_1")[m
[31m-[m
[31m-  @@index([user_id], map: "idx_userverifications_user_id")[m
[31m-  @@map("userverifications")[m
[32m+[m[32m  id         Int       @id @default(autoincrement())[m
[32m+[m[32m  userId     Int[m
[32m+[m[32m  otp        String    @db.VarChar(10)[m
[32m+[m[32m  type       OtpType   @default(SMS)[m
[32m+[m[32m  expiresAt  DateTime[m
[32m+[m[32m  createdAt  DateTime  @default(now())[m
[32m+[m[32m  user       users     @relation(fields: [userId], references: [id_user], onDelete: Cascade)[m
[32m+[m
[32m+[m[32m  @@index([otp])[m
[32m+[m[32m  @@index([userId, type])[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32mmodel virtual_cards {[m
[32m+[m[32m  id_card     Int                    @id @default(autoincrement())[m
[32m+[m[32m  user_id     Int[m
[32m+[m[32m  external_id String                 @unique @db.VarChar(255)[m
[32m+[m[32m  card_number String                 @db.VarChar(16)[m
[32m+[m[32m  expiry_date String                 @db.VarChar(5)[m
[32m+[m[32m  cvv         String?                @db.VarChar(3)[m
[32m+[m[32m  status      virtual_cards_status   @default(ACTIVE)[m
[32m+[m[32m  balance     Decimal                @default(0.00) @db.Decimal(10, 2)[m
[32m+[m[32m  currency    String                 @default("USD") @db.VarChar(3)[m
[32m+[m[32m  created_at  DateTime               @default(now()) @db.Timestamp(0)[m
[32m+[m[32m  updated_at  DateTime               @default(now()) @db.Timestamp(0)[m
[32m+[m[32m  deleted     virtual_cards_deleted? @default(no)[m
[32m+[m[32m  card_orders card_orders[][m
[32m+[m[32m  users       users                  @relation(fields: [user_id], references: [id_user], onDelete: Cascade)[m
[32m+[m
[32m+[m[32m  @@index([user_id], map: "idx_virtual_cards_user_id")[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32menum card_orders_deleted {[m
[32m+[m[32m  yes[m
[32m+[m[32m  no[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32menum card_orders_status {[m
[32m+[m[32m  PENDING[m
[32m+[m[32m  COMPLETED[m
[32m+[m[32m  FAILED[m
[32m+[m[32m  REFUNDED[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32menum card_orders_type {[m
[32m+[m[32m  PURCHASE[m
[32m+[m[32m  TOPUP[m
 }[m
 [m
[31m-// Enums (inchangés)[m
 enum fees_deleted {[m
   yes[m
   no[m
[36m@@ -189,52 +234,11 @@[m [menum userverifications_status {[m
   failed[m
 }[m
 [m
[31m-model virtual_cards {[m
[31m-  id_card          Int                   @id @default(autoincrement())[m
[31m-  user_id          Int[m
[31m-  external_id      String                @unique @db.VarChar(255) // ID de la carte chez le fournisseur[m
[31m-  card_number      String                @db.VarChar(16) // Partiellement masqué en front[m
[31m-  expiry_date      String                @db.VarChar(5)  // Format: MM/YY[m
[31m-  cvv              String?               @db.VarChar(3)  // Optionnel selon votre besoin[m
[31m-  status           virtual_cards_status  @default(ACTIVE)[m
[31m-  balance          Decimal               @default(0.00) @db.Decimal(10, 2)[m
[31m-  currency         String                @default("USD") @db.VarChar(3)[m
[31m-  created_at       DateTime              @default(now()) @db.Timestamp(0)[m
[31m-  updated_at       DateTime              @default(now()) @db.Timestamp(0)[m
[31m-  deleted          virtual_cards_deleted? @default(no)[m
[31m-  [m
[31m-  // Relations[m
[31m-  users            users                 @relation(fields: [user_id], references: [id_user], onDelete: Cascade)[m
[31m-  card_orders      card_orders[][m
[31m-  [m
[31m-  @@index([user_id], map: "idx_virtual_cards_user_id")[m
[31m-  @@map("virtual_cards")[m
[31m-}[m
[31m-[m
[31m-model card_orders {[m
[31m-  id_order         Int                   @id @default(autoincrement())[m
[31m-  card_id          Int?[m
[31m-  user_id          Int[m
[31m-  type             card_orders_type[m
[31m-  amount           Decimal               @db.Decimal(10, 2)[m
[31m-  fee              Decimal               @default(0.00) @db.Decimal(10, 2)[m
[31m-  provider_fee     Decimal?              @db.Decimal(10, 2) // Frais de l'API externe[m
[31m-  status           card_orders_status    @default(PENDING)[m
[31m-  external_ref     String?               @db.VarChar(255) // ID de l'opération chez le fournisseur[m
[31m-  executed_at      DateTime?             @db.Timestamp(0)[m
[31m-  created_at       DateTime              @default(now()) @db.Timestamp(0)[m
[31m-  deleted          card_orders_deleted?  @default(no)[m
[31m-  [m
[31m-  // Relations[m
[31m-  users            users                 @relation(fields: [user_id], references: [id_user], onDelete: Cascade)[m
[31m-  virtual_cards    virtual_cards?        @relation(fields: [card_id], references: [id_card], onDelete: SetNull)[m
[31m-  [m
[31m-  @@index([card_id], map: "idx_card_orders_card_id")[m
[31m-  @@index([user_id], map: "idx_card_orders_user_id")[m
[31m-  @@map("card_orders")[m
[32m+[m[32menum virtual_cards_deleted {[m
[32m+[m[32m  yes[m
[32m+[m[32m  no[m
 }[m
 [m
[31m-// Nouveaux enums à ajouter[m
 enum virtual_cards_status {[m
   ACTIVE[m
   INACTIVE[m
[36m@@ -242,24 +246,7 @@[m [menum virtual_cards_status {[m
   CANCELLED[m
 }[m
 [m
[31m-enum virtual_cards_deleted {[m
[31m-  yes[m
[31m-  no[m
[31m-}[m
[31m-[m
[31m-enum card_orders_type {[m
[31m-  PURCHASE[m
[31m-  TOPUP[m
[31m-}[m
[31m-[m
[31m-enum card_orders_status {[m
[31m-  PENDING[m
[31m-  COMPLETED[m
[31m-  FAILED[m
[31m-  REFUNDED[m
[31m-}[m
[31m-[m
[31m-enum card_orders_deleted {[m
[31m-  yes[m
[31m-  no[m
[32m+[m[32menum OtpType {[m
[32m+[m[32m  SMS[m
[32m+[m[32m  EMAIL[m
 }[m
\ No newline at end of file[m
